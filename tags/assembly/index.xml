<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>assembly on Generic title here..</title>
    <link>/tags/assembly/</link>
    <description>Recent content in assembly on Generic title here..</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 21 Mar 2017 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/assembly/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SLAE Tcp Bind Shell</title>
      <link>/2017/03/slae-tcp-bind-shell/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/03/slae-tcp-bind-shell/</guid>
      <description>SLAE The SecurityTube Linux Assembly Expert is a course and certification from the folks over at http://www.securitytube-training.com and also available on http://www.pentesteracademey.com.
This blog post is the first post required for the exam requirements. My student id is: PA-4897 and the github url to my repo is https://github.com/mwest67/slae.
Getting started Our first task is to create a tcp bind shell in shellcode. In order to do this lets first understand what a bind shell is.</description>
    </item>
    
    <item>
      <title>Crafting Shellcode</title>
      <link>/2016/11/crafting-shellcode/</link>
      <pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/crafting-shellcode/</guid>
      <description>Intro Right! Let me start off by saying that this is not going to be and assembly code primer. This is just intended to a brief intro into the mindset needed to craft shellcode. There are blogs and resources more comprehensive than this post that explain things in greater detail, one such book is the Shellcoders Handbook.
This is just going to be a whrilwind tour, at the end of which you&amp;rsquo;ll have a highlevel view of the thought process that goes into crafting shellcode.</description>
    </item>
    
  </channel>
</rss>
